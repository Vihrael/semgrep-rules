rules:
- id: sqlalchemy-filter-sql-injection
  patterns:
  - pattern-either:
    - pattern: |
        def $FUNC(...,$VAR,...):
          ...
          $SESSION.query(...).filter("...".format(...,$VAR,...))
    - pattern: |
        def $FUNC(...,$VAR,...):
          ...
          $SESSION.query.join(...).filter("...".format(...,$VAR,...))
    - pattern: |
        def $FUNC(...,$VAR,...):
          ...
          $SESSION.query.filter("...".format(...,$VAR,...))
    - pattern: |
        def $FUNC(...,$VAR,...):
          ...
          query.filter("...".format(...,$VAR,...))
  message: |
    Filter in SQLAlchemy can cause sql injections if the developer inputs raw SQL into the filter clause. 
    This pattern captures relevant cases in which the developer inputs raw SQL into the filter parameter and 
    injects user-input into the raw SQL with "format". Instead, use filter_by or bindParams to securely bind user-input
    to SQL statements.
  fix-regex:
    regex: filter
    replacement: filter_by
  languages:
  - python
  severity: WARNING

